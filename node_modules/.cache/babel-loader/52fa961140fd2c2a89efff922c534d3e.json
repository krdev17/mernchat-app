{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Dev\\\\Documents\\\\mern-chat-app\\\\frontend\\\\src\\\\components\\\\MyChats.js\",\n    _s = $RefreshSig$();\n\nimport { AddIcon } from \"@chakra-ui/icons\";\nimport { Box, Stack, Text } from \"@chakra-ui/layout\";\nimport { useToast } from \"@chakra-ui/toast\";\nimport axios from \"axios\";\nimport { useEffect, useState } from \"react\";\nimport { getSender } from \"../config/ChatLogics\";\nimport ChatLoading from \"./ChatLoading\";\nimport GroupChatModal from \"./miscellaneous/GroupChatModal\";\nimport { Button } from \"@chakra-ui/react\";\nimport { ChatState } from \"../Context/ChatProvider\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst MyChats = _ref => {\n  _s();\n\n  let {\n    fetchAgain\n  } = _ref;\n  const [loggedUser, setLoggedUser] = useState();\n  const {\n    selectedChat,\n    setSelectedChat,\n    user,\n    chats,\n    setChats\n  } = ChatState();\n  const toast = useToast();\n\n  const fetchChats = async () => {\n    // console.log(user._id);\n    try {\n      const config = {\n        headers: {\n          Authorization: `Bearer ${user.token}`\n        }\n      };\n      const {\n        data\n      } = await axios.get(\"/api/chat\", config);\n      setChats(data);\n    } catch (error) {\n      toast({\n        title: \"Error Occured!\",\n        description: \"Failed to Load the chats\",\n        status: \"error\",\n        duration: 5000,\n        isClosable: true,\n        position: \"bottom-left\"\n      });\n    }\n  };\n\n  useEffect(() => {\n    setLoggedUser(JSON.parse(localStorage.getItem(\"userInfo\")));\n    fetchChats(); // eslint-disable-next-line\n  }, [fetchAgain]);\n  return /*#__PURE__*/_jsxDEV(Box, {\n    d: {\n      base: selectedChat ? \"none\" : \"flex\",\n      md: \"flex\"\n    },\n    flexDir: \"column\",\n    alignItems: \"center\",\n    p: 3,\n    bg: \"white\",\n    w: {\n      base: \"100%\",\n      md: \"31%\"\n    },\n    borderRadius: \"lg\",\n    borderWidth: \"1px\",\n    children: [/*#__PURE__*/_jsxDEV(Box, {\n      pb: 3,\n      px: 3,\n      fontSize: {\n        base: \"28px\",\n        md: \"30px\"\n      },\n      fontFamily: \"Work sans\",\n      d: \"flex\",\n      w: \"100%\",\n      justifyContent: \"space-between\",\n      alignItems: \"center\",\n      children: [\"My Chats\", /*#__PURE__*/_jsxDEV(GroupChatModal, {\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          d: \"flex\",\n          fontSize: {\n            base: \"17px\",\n            md: \"10px\",\n            lg: \"17px\"\n          },\n          rightIcon: /*#__PURE__*/_jsxDEV(AddIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 24\n          }, this),\n          children: \"New Group Chat\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      d: \"flex\",\n      flexDir: \"column\",\n      p: 3,\n      bg: \"#F8F8F8\",\n      w: \"100%\",\n      h: \"100%\",\n      borderRadius: \"lg\",\n      overflowY: \"hidden\",\n      children: chats ? /*#__PURE__*/_jsxDEV(Stack, {\n        overflowY: \"scroll\",\n        children: chats.map(chat => /*#__PURE__*/_jsxDEV(Box, {\n          onClick: () => setSelectedChat(chat),\n          cursor: \"pointer\",\n          bg: selectedChat === chat ? \"#38B2AC\" : \"#E8E8E8\",\n          color: selectedChat === chat ? \"white\" : \"black\",\n          px: 3,\n          py: 2,\n          borderRadius: \"lg\",\n          children: [/*#__PURE__*/_jsxDEV(Text, {\n            children: !chat.isGroupChat ? getSender(loggedUser, chat.users) : chat.chatName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 17\n          }, this), chat.latestMessage && /*#__PURE__*/_jsxDEV(Text, {\n            fontSize: \"xs\",\n            children: [/*#__PURE__*/_jsxDEV(\"b\", {\n              children: [chat.latestMessage.sender.name, \" : \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 110,\n              columnNumber: 21\n            }, this), chat.latestMessage.content.length > 50 ? chat.latestMessage.content.substring(0, 51) + \"...\" : chat.latestMessage.content]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 19\n          }, this)]\n        }, chat._id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(ChatLoading, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n};\n\n_s(MyChats, \"YQd3AWel/HFwk7lFM1/6tXxZbeA=\", false, function () {\n  return [useToast];\n});\n\n_c = MyChats;\nexport default MyChats;\n\nvar _c;\n\n$RefreshReg$(_c, \"MyChats\");","map":{"version":3,"names":["AddIcon","Box","Stack","Text","useToast","axios","useEffect","useState","getSender","ChatLoading","GroupChatModal","Button","ChatState","MyChats","fetchAgain","loggedUser","setLoggedUser","selectedChat","setSelectedChat","user","chats","setChats","toast","fetchChats","config","headers","Authorization","token","data","get","error","title","description","status","duration","isClosable","position","JSON","parse","localStorage","getItem","base","md","lg","map","chat","isGroupChat","users","chatName","latestMessage","sender","name","content","length","substring","_id"],"sources":["C:/Users/Dev/Documents/mern-chat-app/frontend/src/components/MyChats.js"],"sourcesContent":["import { AddIcon } from \"@chakra-ui/icons\";\r\nimport { Box, Stack, Text } from \"@chakra-ui/layout\";\r\nimport { useToast } from \"@chakra-ui/toast\";\r\nimport axios from \"axios\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { getSender } from \"../config/ChatLogics\";\r\nimport ChatLoading from \"./ChatLoading\";\r\nimport GroupChatModal from \"./miscellaneous/GroupChatModal\";\r\nimport { Button } from \"@chakra-ui/react\";\r\nimport { ChatState } from \"../Context/ChatProvider\";\r\n\r\nconst MyChats = ({ fetchAgain }) => {\r\n  const [loggedUser, setLoggedUser] = useState();\r\n\r\n  const { selectedChat, setSelectedChat, user, chats, setChats } = ChatState();\r\n\r\n  const toast = useToast();\r\n\r\n  const fetchChats = async () => {\r\n    // console.log(user._id);\r\n    try {\r\n      const config = {\r\n        headers: {\r\n          Authorization: `Bearer ${user.token}`,\r\n        },\r\n      };\r\n\r\n      const { data } = await axios.get(\"/api/chat\", config);\r\n      setChats(data);\r\n    } catch (error) {\r\n      toast({\r\n        title: \"Error Occured!\",\r\n        description: \"Failed to Load the chats\",\r\n        status: \"error\",\r\n        duration: 5000,\r\n        isClosable: true,\r\n        position: \"bottom-left\",\r\n      });\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    setLoggedUser(JSON.parse(localStorage.getItem(\"userInfo\")));\r\n    fetchChats();\r\n    // eslint-disable-next-line\r\n  }, [fetchAgain]);\r\n\r\n  return (\r\n    <Box\r\n      d={{ base: selectedChat ? \"none\" : \"flex\", md: \"flex\" }}\r\n      flexDir=\"column\"\r\n      alignItems=\"center\"\r\n      p={3}\r\n      bg=\"white\"\r\n      w={{ base: \"100%\", md: \"31%\" }}\r\n      borderRadius=\"lg\"\r\n      borderWidth=\"1px\"\r\n    >\r\n      <Box\r\n        pb={3}\r\n        px={3}\r\n        fontSize={{ base: \"28px\", md: \"30px\" }}\r\n        fontFamily=\"Work sans\"\r\n        d=\"flex\"\r\n        w=\"100%\"\r\n        justifyContent=\"space-between\"\r\n        alignItems=\"center\"\r\n      >\r\n        My Chats\r\n        <GroupChatModal>\r\n          <Button\r\n            d=\"flex\"\r\n            fontSize={{ base: \"17px\", md: \"10px\", lg: \"17px\" }}\r\n            rightIcon={<AddIcon />}\r\n          >\r\n            New Group Chat\r\n          </Button>\r\n        </GroupChatModal>\r\n      </Box>\r\n      <Box\r\n        d=\"flex\"\r\n        flexDir=\"column\"\r\n        p={3}\r\n        bg=\"#F8F8F8\"\r\n        w=\"100%\"\r\n        h=\"100%\"\r\n        borderRadius=\"lg\"\r\n        overflowY=\"hidden\"\r\n      >\r\n        {chats ? (\r\n          <Stack overflowY=\"scroll\">\r\n            {chats.map((chat) => (\r\n              <Box\r\n                onClick={() => setSelectedChat(chat)}\r\n                cursor=\"pointer\"\r\n                bg={selectedChat === chat ? \"#38B2AC\" : \"#E8E8E8\"}\r\n                color={selectedChat === chat ? \"white\" : \"black\"}\r\n                px={3}\r\n                py={2}\r\n                borderRadius=\"lg\"\r\n                key={chat._id}\r\n              >\r\n                <Text>\r\n                  {!chat.isGroupChat\r\n                    ? getSender(loggedUser, chat.users)\r\n                    : chat.chatName}\r\n                </Text>\r\n                {chat.latestMessage && (\r\n                  <Text fontSize=\"xs\">\r\n                    <b>{chat.latestMessage.sender.name} : </b>\r\n                    {chat.latestMessage.content.length > 50\r\n                      ? chat.latestMessage.content.substring(0, 51) + \"...\"\r\n                      : chat.latestMessage.content}\r\n                  </Text>\r\n                )}\r\n              </Box>\r\n            ))}\r\n          </Stack>\r\n        ) : (\r\n          <ChatLoading />\r\n        )}\r\n      </Box>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default MyChats;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}